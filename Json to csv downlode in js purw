  
    <button
                onClick={() => {
                  getHandle();
                }}
                className="bg-gradient-to-l from-blue1 via-blue2 to-blue3 text-white px-5 text-sm py-2 font-medium rounded-3xl text-center mx-2"
              >
                Export CSV
              </button>
  
  
  
  
  let items=[
  
  {
  name:'fjfj',
  vcdhdh:'ffh,
  },
  {
  name:'fjfj',
  vcdhdh:'ffh,
  },{
  name:'fjfj',
  vcdhdh:'ffh,
  },{
  name:'fjfj',
  vcdhdh:'ffh,
  },{
  name:'fjfj',
  vcdhdh:'ffh,
  },]
  
  
  
  const download = function (data) {
    // Creating a Blob for having a csv file format
    // and passing the data with type
    const blob = new Blob([data], { type: "text/csv" });

    // Creating an object for downloading url
    const url = window.URL.createObjectURL(blob);

    // Creating an anchor(a) tag of HTML
    const a = document.createElement("a");

    // Passing the blob downloading url
    a.setAttribute("href", url);

    // Setting the anchor tag attribute for downloading
    // and passing the download file name
    a.setAttribute("download", "download.csv");

    // Performing a download with click
    a.click();
  };

  const csvmaker = function (data) {
    // Empty array for storing the values
    let csvRows = [];

    // Headers is basically a keys of an
    // object which is id, name, and
    // profession

    const objValue = Object.keys(data[0]);

    let headers = objValue?.map((w) => {
      return w.toUpperCase();
    });

    // As for making csv format, headers
    // must be separated by comma and
    // pushing it into array
    csvRows.push(headers.join(","));

    // Pushing Object values into array
    // with comma separation

    data.map((w) => {
      const values = Object.values(w).join(",");

      csvRows.push(values);
    });

    // Returning the array joining with new line
    return csvRows.join("\n");
  };

  const getHandle = async function () {
    const csvdata = csvmaker(items);
    download(csvdata);
  };
